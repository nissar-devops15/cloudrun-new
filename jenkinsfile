pipeline {
    agent any
    
    environment {
        PROJECT_ID = 'solid-drive-452217-q6'
        GOOGLE_APPLICATION_CREDENTIALS = credentials('service_account')  // Corrected CREDENTIALS function usage
        DOCKER_HUB_CREDENTIALS_USR = 'nissardocker94'
        IMAGE_NAME = 'cloudrunimage'
        DOCKER_HUB_CREDENTIALS_PSWD = credentials('Docker_hub_pwd')  // Corrected credentials usage
    }
    
    stages {
        stage('Clone Repository') {
            steps {
                git branch: 'main', url: 'https://github.com/nissar-devops15/cloudrun-new.git'
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    // Building the docker image with dynamic tag
                    sh "docker build -t ${DOCKER_HUB_CREDENTIALS_USR}/${IMAGE_NAME}:${BUILD_NUMBER} ."
                }
            }
        }

        stage('Push Docker Image to Docker Hub') {
            steps {
                sript{
                withCredentials([usernamePassword(credentialsId:'Docker_hub_pwd', usernameVariable:'DOCKER_USERNAME', passwordVariable:'DOCKER_PASSWORD')]) {
                    // Docker login
                    sh "echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin"
                   }
                 
                    // Push the image to Docker Hub
                    sh "docker push ${DOCKER_HUB_CREDENTIALS_USR}/${IMAGE_NAME}:${BUILD_NUMBER}"
                }
            }
        }

        stage('Deploy to Google Cloud Run') {
            steps {
                script {
                    // Use credentials for Google Cloud Service Account JSON file
                    withCredentials([file(credentialsId:'service_account', variable:'GOOGLE_APPLICATION_CREDENTIALS')]) {
                        // Set the Google Cloud project
                        sh "gcloud config set project ${PROJECT_ID}"

                        // Deploy the Docker image to Google Cloud Run
                        sh "gcloud run deploy ${IMAGE_NAME} \
                                --image docker.io/${DOCKER_HUB_CREDENTIALS_USR}/${IMAGE_NAME}:${BUILD_NUMBER} \
                                --platform managed \
                                --region us-central1 \
                                --allow-unauthenticated"

                        // Set IAM policy to allow all users to invoke the service
                        sh "gcloud run services add-iam-policy-binding ${IMAGE_NAME} \
                                --region us-central1 \
                                --member='allUsers' \
                                --role='roles/run.invoker'"
                    }
                }
            }
        }
    }
}
